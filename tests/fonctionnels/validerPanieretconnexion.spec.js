// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('valider Panier et connexion', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('valider Panier et connexion', async function() {
    await driver.get("http://localhost:8080/")
    await driver.manage().window().setRect({ width: 1536, height: 816 })
    await driver.findElement(By.linkText("Produits")).click()
    await driver.findElement(By.linkText("Arbres fruitiers")).click()
    {
      const element = await driver.findElement(By.css(".display-articles:nth-child(1) h3"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.css(".display-articles:nth-child(1) .ml-5 > .fa-solid:nth-child(1)")).click()
    {
      const element = await driver.findElement(By.css(".display-articles:nth-child(1) .v-btn .fa-solid"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.css(".display-articles:nth-child(1) .v-btn .fa-solid")).click()
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    {
      const element = await driver.findElement(By.css(".display-articles:nth-child(3) h3"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    await driver.findElement(By.linkText("Produits")).click()
    await driver.findElement(By.linkText("Rosiers")).click()
    {
      const element = await driver.findElement(By.css(".display-articles:nth-child(1) h3"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.css(".display-articles:nth-child(1) .ml-5 > .fa-solid:nth-child(1)")).click()
    {
      const element = await driver.findElement(By.css(".display-articles:nth-child(1) .v-btn .fa-solid"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.css(".display-articles:nth-child(1) .v-btn .fa-solid")).click()
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    await driver.findElement(By.css(".fa-user")).click()
    await driver.findElement(By.id("input-101")).click()
    await driver.findElement(By.id("input-101")).sendKeys("b@g.com")
    await driver.findElement(By.id("input-105")).click()
    await driver.findElement(By.css(".v-icon--link")).click()
    await driver.findElement(By.css(".mb-8:nth-child(4) > .v-btn__content")).click()
    await driver.findElement(By.css(".nb-articles")).click()
    await driver.findElement(By.css(".fa-cart-shopping")).click()
    {
      const element = await driver.findElement(By.css(".fa-cart-shopping"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".v-btn"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.css(".v-btn")).click()
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
  })
})
